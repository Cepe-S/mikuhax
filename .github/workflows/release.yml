# This is a basic workflow to help you get started with Actions

name: Upload Release Asset

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    tags:
    - 'v*'
  pull_request:
    branches: [ master ]
    tags:
    - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          npm run quick:install
          npm run quick:build
          zip build-outputs -r ./core/out/* ./core/public/out/* ./db/out/*
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build-outputs.zip
          asset_name: build-outputs.zip
          asset_content_type: application/zip
